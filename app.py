from pathlib import Path
from PIL import Image
import streamlit as st
# Importez le module de configuration et les fonctions utilitaires
import config
from utils import load_model, infer_uploaded_image, infer_uploaded_webcam, seq_detection
import cv2
# Configuration de la mise en page de la page
st.set_page_config(
    page_title="D√©tection du S√©quen√ßage des Accessoires de C√¢bles Haute Tension Utilisant un Mod√®le DL",
    page_icon="ü§ñ",
    layout="wide",
    initial_sidebar_state="expanded"
)
# Titre principal de la page
st.title("D√©tection du S√©quen√ßage des Accessoires de C√¢bles Haute Tension Utilisant un Mod√®le DL")
# Barre lat√©rale
st.sidebar.header("Configuration du Mod√®le DL")
# S√©lection de la confiance du mod√®le √† partir de la barre lat√©rale
confidence = float(st.sidebar.slider(
    "S√©lectionnez la Confiance du Mod√®le", 30, 100, 50)) / 100
# Chemin du mod√®le pr√©-entra√Æn√©
model_path = "best.pt"
# Chargez le mod√®le DL pr√©-entra√Æn√©
try:
    model = load_model(model_path)
except Exception as e:
    st.error(f"Impossible de charger le mod√®le. Veuillez v√©rifier le chemin sp√©cifi√© : {model_path}")
# S√©lectionnez la source (image ou webcam) depuis la barre lat√©rale
source_selectbox = st.sidebar.selectbox(
    "S√©lectionnez la Source",
    config.SOURCES_LIST
)
# Gestion de la source s√©lectionn√©e
source_img = None
if source_selectbox == config.SOURCES_LIST[0]: # Image
    # Effectuez la d√©tection sur une image t√©l√©charg√©e
    labels, image_path = infer_uploaded_image(confidence, model)
    # Appelez la fonction seq_detection avec les labels et le chemin de l'image pour d√©tecter le #s√©quen√ßage des objets
    seq_detection(labels, image_path)

elif source_selectbox == config.SOURCES_LIST[1]: # Webcam
    # Effectuez la d√©tection en temps r√©el √† partir de la webcam
    infer_uploaded_webcam(confidence, model)
else:
    st.error("Actuellement, seules les sources 'Image' et 'Webcam' sont prises en charge")
